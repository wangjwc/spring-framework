description = "spring-learn"

apply plugin: "groovy"
apply plugin: "kotlin"

dependencies {
   /// compile fileTree(dir: 'lib', include: '**/*.jar')
    compile(project(":spring-beans"))
    compile(project(":spring-core"))
    testCompile group: 'junit', name: 'junit', version: '4.12'
    optional("org.codehaus.groovy:groovy-xml")
}

//tasks.withType(JavaCompile) {
//    //enable compilation in a separate daemon process
//    options.fork = true
//    options.warnings = false
//    options.incremental = true
//    options.deprecation = true
//
//}

// This module does joint compilation for Java and Groovy code with the compileGroovy task.
sourceSets {
    main.groovy.srcDirs += "src/main/java"
    main.java.srcDirs = []
}

compileGroovy {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

// This module also builds Kotlin code and the compileKotlin task naturally depends on
// compileJava. We need to redefine dependencies to break task cycles.
def deps = compileGroovy.taskDependencies.immutableValues + compileGroovy.taskDependencies.mutableValues
compileGroovy.dependsOn = deps - "compileJava"
compileKotlin.dependsOn(compileGroovy)
compileKotlin.classpath += files(compileGroovy.destinationDir)
